/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Pet } from "@prisma/client";

export class PetServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.PetCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetCountArgs>
  ): Promise<number> {
    return this.prisma.pet.count(args);
  }

  async pets<T extends Prisma.PetFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetFindManyArgs>
  ): Promise<Pet[]> {
    return this.prisma.pet.findMany(args);
  }
  async pet<T extends Prisma.PetFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetFindUniqueArgs>
  ): Promise<Pet | null> {
    return this.prisma.pet.findUnique(args);
  }
  async createPet<T extends Prisma.PetCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetCreateArgs>
  ): Promise<Pet> {
    return this.prisma.pet.create<T>(args);
  }
  async updatePet<T extends Prisma.PetUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetUpdateArgs>
  ): Promise<Pet> {
    return this.prisma.pet.update<T>(args);
  }
  async deletePet<T extends Prisma.PetDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetDeleteArgs>
  ): Promise<Pet> {
    return this.prisma.pet.delete(args);
  }
}
